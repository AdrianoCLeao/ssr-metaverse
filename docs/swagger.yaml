definitions:
  controllers.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      password:
        example: secret123
        type: string
      username:
        example: johndoe
        type: string
    required:
    - password
    - username
    type: object
  controllers.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user using the provided username and password,
        then returns a JWT token if the credentials are valid.
      parameters:
      - description: User login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful authentication
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized - invalid credentials
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Authenticate user and generate JWT token
      tags:
      - authentication
  /hello:
    get:
      consumes:
      - application/json
      description: Returns a Hello World message from the API
      produces:
      - application/json
      responses:
        "200":
          description: Hello Message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Returns a message from the API
      tags:
      - hello
swagger: "2.0"
